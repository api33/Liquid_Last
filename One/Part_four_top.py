import numpy as np
from scipy.interpolate import CubicSpline
import matplotlib.pyplot as plt
from scipy.interpolate import BSpline
from scipy.optimize import fsolve
lst_y=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 62, 387, 1555, 3629, 7625, 13460, 14238, 7397, 1991, 670, 486, 436, 345, 309, 268, 264, 244, 225, 238, 214, 241, 201, 235, 199, 186, 183, 210, 174, 212, 220, 198, 207, 176, 200, 197, 208, 223, 215, 213, 224, 227, 217, 264, 306, 359, 487, 675, 958, 1400, 1781, 2429, 2624, 2677, 2612, 2546, 2448, 2345, 2271, 2142, 2301, 2164, 2072, 2062, 1903, 1882, 1827, 1865, 1785, 1825, 1774, 1778, 1828, 1747, 1566, 1314, 1088, 861, 663, 573, 430, 292, 142, 43, 13, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
lst_y=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 16, 144, 674, 1919, 3692, 4918, 5111, 5222, 5259, 5872, 7478, 8494, 6877, 3192, 954, 402, 256, 248, 251, 262, 235, 229, 229, 193, 211, 191, 188, 189, 170, 156, 134, 152, 145, 142, 127, 138, 122, 135, 106, 120, 120, 109, 98, 92, 88, 101, 112, 103, 102, 98, 101, 108, 101, 113, 100, 100, 119, 95, 95, 103, 94, 123, 114, 107, 125, 127, 126, 116, 138, 123, 133, 135, 127, 154, 146, 167, 162, 189, 191, 189, 208, 192, 181, 202, 211, 214, 259, 234, 315, 322, 406, 463, 612, 708, 905, 1054, 1148, 1174, 1095, 1107, 1007, 911, 887, 923, 851, 885, 969, 1078, 1155, 1143, 1215, 1229, 1215, 1297, 1365, 1449, 1592, 1658, 1649, 1619, 1520, 1431, 1475, 1451, 1358, 1446, 1373, 1363, 1148, 930, 739, 606, 483, 357, 239, 160, 99, 33, 19, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

lst_x=[i for i in range(len(lst_y))]
# 构造离散点
x = np.array(lst_x)
y = np.array(lst_y)

# 使用三次样条插值
cs = CubicSpline(x, y)

# 生成插值曲线上的更多点
x_interp = x
y_interp = cs(x_interp)
# 定义方程，用于求解给定 y 对应的 x
equation = lambda x_val: cs(x_val) - 1000


derivative = cs.derivative()

# 绘制原始离散点和插值曲线
# plt.scatter(x, y, label='Discrete Points')
plt.plot(x_interp, y_interp, label='Cubic Spline Interpolation')
plt.plot(x, y, label='Cubic Spline Interpolation')
plt.legend()
plt.show()