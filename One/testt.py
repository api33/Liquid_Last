import numpy as np
import matplotlib.pyplot as plt
from scipy.signal import find_peaks

# 给定的列表数据（示例数据）
#lst = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 10, 112, 571, 1529, 2785, 3655, 4285, 5173, 5374, 5497, 5776, 5037, 2767, 61, 2273, 3325, 4033, 4941, 5140, 5287, 5596, 4976, 3156, 1309, 360, 175, 119, 100, 103, 93, 63, 37, 56, 31, 29, 66, 32, 35, 31, 3, 37, 40, 37, 46, 17, 18, 24, 18, 14, 34, 1, 27, 11, 16, 20, 12, 8, 8, 11, 6, 8, 21, 6, 20, 14, 6, 33, 11, 1, 6, 12, 0, 12, 19, 3, 11, 4, 47, 19, 9, 33, 30, 54, 36, 60, 68, 86, 78, 120, 166, 188, 287, 321, 530, 707, 924, 1020, 1230, 1208, 1329, 1199, 1101, 1021, 734, 579, 281, 112, 174, 280, 494, 442, 530, 514, 472, 434, 330, 207, 40, 149, 311, 381, 511, 605, 649, 695, 873, 913, 742, 703, 465, 346, 196, 18, 28, 194, 472, 619, 797, 1124, 1227, 1425, 1469, 1485, 1492, 1489, 1437, 1410, 1167, 891, 646, 373, 216, 116, 54, 21, 7, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

lst=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 53, 238, 685, 1461, 2933, 4359, 5020, 5159, 5613, 6739, 7973, 8320, 5817, 1815, 1850, 3962, 4739, 4958, 5413, 6580, 7879, 8412, 6344, 3144, 962, 285, 161, 77, 91, 37, 38, 31, 48, 34, 24, 24, 25, 32, 16, 35, 18, 21, 22, 22, 11, 7, 13, 5, 19, 4, 1, 29, 14, 30, 13, 11, 4, 21, 38, 11, 1, 1, 23, 5, 2, 3, 42, 4, 26, 32, 44, 16, 10, 10, 38, 33, 21, 45, 54, 33, 38, 72, 99, 83, 116, 128, 197, 269, 302, 393, 476, 632, 817, 970, 1057, 1068, 973, 825, 865, 679, 629, 415, 250, 76, 87, 170, 218, 310, 271, 402, 407, 500, 453, 567, 355, 253, 158, 51, 141, 289, 300, 530, 633, 921, 1005, 1206, 1268, 1168, 1140, 1090, 1180, 1073, 1010, 831, 719, 535, 426, 344, 297, 257, 207, 154, 91, 65, 26, 14, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

# 绘制曲线
plt.plot(lst, label='Original Curve')
plt.scatter(range(len(lst)), lst, c='red', marker='o', label='Data Points')

# 找到波峰
peaks, _ = find_peaks(lst)

# 获取波峰的位置和高度
peak_positions = peaks
peak_heights = [lst[peak] for peak in peaks]

# 根据波峰高度降序排序
sorted_peaks = sorted(zip(peak_positions, peak_heights), key=lambda x: x[1], reverse=True)
top_four_peaks=sorted_peaks[:4]
# 获取最高的四个波峰
# top_four_peaks_all = sorted_peaks[:6]
# if top_four_peaks_all[1]-top_four_peaks_all[]

# 打印最高的四个波峰位置坐标
print("Top four peaks:")
for position, height in top_four_peaks:
    print(f"Position: {position}, Height: {height}")

# newtop_four_peaks=[]
# for position,_ in top_four_peaks:
#     while

# 在图上标记最高的四个波峰
top_four_positions, _ = zip(*top_four_peaks)
plt.scatter(top_four_positions, [lst[position] for position in top_four_positions],
            c='green', marker='x', label='Top Four Peaks')

# 显示图例
plt.legend()

# 显示图形
plt.show()